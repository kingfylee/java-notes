执行sql脚本文件:
    mysql –uroot –p123456 -Dtest < /tmp/ss.sql
    进入mysql内:source /tmp/ss.sql

索引
    B树（B-Tree）
        B-Tree为系统最优化大块数据的读和写操作
        B-Tree算法减少定位记录时所经历的中间过程，从而加快存取速度
        所有叶节点具有相同的深度，等于树高h
    B+树（B+Tree）
        只有叶节点才存储数据（数据存放的更加紧密，具有更好的空间局部性）
        在B+Tree的每个叶子节点包含一个指向相邻叶子节点的指针（对整棵树的便利只需要一次线性遍历叶子结点即可）

    索引建立原则
        最左前缀匹配原则
            查询条件中的所有字段需要从左边起按顺序出现在多列索引中，查询条件的字段数要小于等于多列索引的字段数，中间字段不能存在范围查询的字段(<,like等)，这样的sql可以使用该多列索引。
        =和in可以乱序
            mysql的查询优化器会帮你优化成索引可以识别的形式
        尽量选择区分度高的列作为索引
            区分度的公式是count(distinct col)/count(*)
        索引列不要参与计算
            b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，成本太大


    B+Tree索引的查询类型
        全值匹配
        匹配最左前缀
        匹配列前缀(可用用like a%,但不能使用like %b)
        匹配范围值
        精确匹配某一列和和范围匹配另外一列