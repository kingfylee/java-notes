spring
    依赖注入，控制反转和非侵入式。

ioc
    Inverse of Control，控制反转，控制权由应用代码转到了外部容器，由容器控制对象的生命周期，降低业务对象之间的依赖关系。

aop
    把逻辑代码和处理日志、事务等的代码分离开，以便能够分离复杂度，统一管理。
    Spring AOP基于动态代理实现：
        1、JDK Proxy 实现接口实现代理
        2、Cglib 继承对应的类实现代理

一个接口存在多个实现类的情况下Autowire的使用：
    1、设置首选的子类，通过@Primary进行标注（如果多处都标注，依然出现歧义性问题）；
    2、限定自动装配的bean，在自动装配注解出添加注解@Qualifier(“name”)，其中name为bean的ID（默认bean ID为类名首字母小写）；如果重命名了组件类，那么自动装配将会失败。
    3、通过自定义的限定符，其实就是在组件类与自动装配处，同时注解Qualifier(“name”)，name为自定义且两出相同。
    4、通过使用自定义的限定符注解。